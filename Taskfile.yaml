# Taskfile.yaml
version: "3"

vars:
  VERSION: v0.1.0-alpha1
  COMMIT: {sh: git rev-parse --short HEAD}
  BUILD_DATE: {sh: date -u +%Y-%m-%dT%H:%M:%SZ}
  IMAGE: docker.io/peek8/conscan

  # static file dirs
  TOOL_DIR: .tool
  TMP_DIR: .tmp

  # TOOLS
  BINNY: "{{ .TOOL_DIR }}/binny"
  GORELEASER: "{{ .TOOL_DIR }}/goreleaser"
  GOLANGCI_LINT: "{{ .TOOL_DIR }}/golangci-lint"
  TASK: "{{ .TOOL_DIR }}/task"


  # note: the snapshot dir must be a relative path starting with ./
  SNAPSHOT_DIR: ./snapshot
  SNAPSHOT_CMD: "{{ .GORELEASER }} release --config {{ .TMP_DIR }}/goreleaser.yaml --clean --snapshot --skip=publish --skip=sign"
  BUILD_CMD:    "{{ .GORELEASER }} build   --config {{ .TMP_DIR }}/goreleaser.yaml --clean --snapshot --single-target"
  RELEASE_CMD:  "{{ .GORELEASER }} release --clean --release-notes {{ .CHANGELOG }}"


tasks:
  default:
    desc: Default to build
    cmds:
      - task: build
  
  ## Bootstrap tasks #################################

  binny:
    internal: true
    # desc: Get the binny tool
    generates:
      - "{{ .BINNY }}"
    status:
      - "test -f {{ .BINNY }}"
    cmd: "curl -sSfL https://raw.githubusercontent.com/anchore/binny/main/install.sh | sh -s -- -b .tool"
    silent: true

  tools:
    desc: Install all tools needed for CI and local development
    deps: [binny]
    aliases:
      - bootstrap
    generates:
      - ".binny.yaml"
      - "{{ .TOOL_DIR }}/*"
    status:
      - "{{ .BINNY }} check -v"
    cmd: "{{ .BINNY }} install -v"
    silent: true

  update-tools:
    desc: Update pinned versions of all tools to their latest available versions
    deps: [binny]
    generates:
      - ".binny.yaml"
      - "{{ .TOOL_DIR }}/*"
    cmd: "{{ .BINNY }} update -v"
    silent: true

  list-tools:
    desc: List all tools needed for CI and local development
    deps: [binny]
    cmd: "{{ .BINNY }} list"
    silent: true

  list-tool-updates:
    desc: List all tools that are not up to date relative to the binny config
    deps: [binny]
    cmd: "{{ .BINNY }} list --updates"
    silent: true

  tmpdir:
    silent: true
    generates:
      - "{{ .TMP_DIR }}"
    cmd: "mkdir -p {{ .TMP_DIR }}"

  ## Static analysis tasks #################################

  format:
    desc: Auto-format all source code
    deps: [tools]
    cmds:
      - gofmt -w -s .
      - go mod tidy

  lint-fix:
    desc: Auto-format all source code + run golangci lint fixers
    deps: [tools]
    cmds:
      - task: format
      - "{{ .GOLANGCI_LINT }} run --tests=false --fix"

  lint:
    desc: Run gofmt + golangci lint checks
    vars:
      BAD_FMT_FILES:
        sh: gofmt -l -s .
      BAD_FILE_NAMES:
        sh: "find . | grep -e ':' || true"
    deps: [tools]
    cmds:
      # ensure there are no go fmt differences
      - cmd: 'test -z "{{ .BAD_FMT_FILES }}" || (echo "files with gofmt issues: [{{ .BAD_FMT_FILES }}]"; exit 1)'
        silent: true
      # ensure there are no files with ":" in it (a known back case in the go ecosystem)
      - cmd: 'test -z "{{ .BAD_FILE_NAMES }}" || (echo "files with bad names: [{{ .BAD_FILE_NAMES }}]"; exit 1)'
        silent: true
      # run linting
      - "{{ .GOLANGCI_LINT }} run --tests=false"
      
  ### Build tasks
  build:
    desc: Build Go binary with versioning
    cmds:
      - go build -ldflags "-s -w -X main.version={{.VERSION}} -X main.commit={{.COMMIT}} -X main.date={{.BUILD_DATE}}" -o bin/conscan .

  run:
    desc: Run locally
    cmds:
      - ./bin/conscan --help

  docker:build:
    desc: Build Docker image
    cmds:
      - docker build --build-arg VERSION={{.VERSION}} --build-arg COMMIT={{.COMMIT}} --build-arg BUILD_DATE={{.BUILD_DATE}} -t {{.IMAGE}}:{{.VERSION}} .

  docker:push:
    desc: Push Docker image
    cmds:
      - docker push {{.IMAGE}}:{{.VERSION}}

  docker:release:
    desc: Build and push with latest + version
    cmds:
      - docker build --build-arg VERSION={{.VERSION}} --build-arg COMMIT={{.COMMIT}} --build-arg BUILD_DATE={{.BUILD_DATE}} -t {{.IMAGE}}:{{.VERSION}} -t {{.IMAGE}}:latest .
      - docker push {{.IMAGE}}:{{.VERSION}}
      - docker push {{.IMAGE}}:latest

